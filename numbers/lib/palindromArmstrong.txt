import'dart:io';
class palindrome{


void answer(number){
int temp=number;
int rev=0;

while(temp>0){
        int rem=temp%10;
        rev=rev*10+rem;
        temp=temp~/10;

}

        if(number==rev){
                print("$number is palindrome" );
        }
}
}
class Armstrong{
    int calculatePower(int base, int exponent) {
        int result = 1;
        for (int i = 0; i < exponent; i++) {
          result *= base;
        }
        return result;
      }
      
      int countDigits(int number) {
        int count = 0;
        while (number != 0) {
          count++;
          number ~/= 10;
        }
        return count;
      }
      
      void isArmstrongNumber(int number) {
        int originalNumber = number;
        int numberOfDigits = countDigits(number);
        int sum = 0;
      
        while (number > 0) {
          int digit = number % 10;
          sum += calculatePower(digit, numberOfDigits);
          number ~/= 10;
        }
      
        if(originalNumber == sum){
            print("$originalNumber is Armstrong number");
        }
        }
}

void main(){
List numbers=[122,121,134,371,129];
Armstrong obj1=new Armstrong();
palindrome obj2=new palindrome();
for(int number in numbers){
obj2.answer(number);
obj1.isArmstrongNumber(number);
}
}